digraph Modexp {
graph [ranksep=0,fontsize=30 labelloc="t" label="" splines=true overlap=false];
node [fontsize = "10",shape = "record",style=rounded];
    subgraph modExp{
  label = "modExp";
	"mod_entry" [color=black,fillcolor=lightblue,label = "modExp(x:Int,y:Int,N:Int)"];
	"node0" [label = "if(y == 0)",shape = diamond,style=solid];
	"mod_exit" [label = "modExp_exit",shape="oval"];
	"node0_return" [label = "return 1"];
	"node1" [label = "z=modExp(x,y/2,N)"];
	"node2" [label = "if(y%2==0)"];
	"node2_return" [label = "return z*z%N"];
	"node3" [label = "return x*z*z%N"];
	mod_entry -> node0 [id = 0];
	node0 -> node0_return [label="Y"];
	node0_return -> mod_exit;
	node0 -> node1 [label = "N"];
	node1 -> node2;
	node2 -> node2_return [label = "Y"];
	node2 -> node3 [label = "N"];
	node2_return -> mod_exit;
	node3 -> mod_exit;
    }

    subgraph main{
	label = "modExp";
	"main_entry" [label = "main(args:Array[String])"];
	"main_exit" [label = "main_exit",shape="oval"];
	"node4" [label="var line:String=null \n var arrs:Array[String]=null",dir="TD"];
	"node5" [label="line = readLine()"];
	"node6" [label = "line !=null",shape=diamond,style=solid];
	"node7" [label = "arrs = line.split(\" \") \n println(modExp(arrs(0).toInt, arrs(1).toInt, arrs(2).toInt))"]
	main_entry -> node4;
	node4 -> node5;
	node5 -> node6;
	node6 -> node7[label = "Y"];
	node6 -> main_exit [label = "N"];
	node7 -> node5;
    }
}